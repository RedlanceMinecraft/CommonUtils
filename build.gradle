plugins {
    id 'maven-publish'
    id 'java-library'
    id 'java'
}

base.archivesName = rootProject.archives_base_name
version = rootProject.mod_version
group = rootProject.maven_group

repositories {
    maven {
        name = "Redlance"
        url = "https://repo.redlance.org/public"
    }
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation api("com.github.mizosoft.methanol:methanol:1.8.0")
    implementation api("com.github.mizosoft.methanol:methanol-gson:1.8.0")

    implementation api("org.apache.logging.log4j:log4j-api:${project.log4j_version}")
    implementation "org.apache.logging.log4j:log4j-core:${project.log4j_version}"
    implementation "org.apache.logging.log4j:log4j-jul:${project.log4j_version}"
    runtimeOnly "com.lmax:disruptor:4.0.0"

    implementation api("org.apache.commons:commons-lang3:3.17.0")
    implementation api("commons-io:commons-io:2.18.0")
    implementation api("com.google.code.gson:gson:2.11.0")

    implementation api("net.kyori:adventure-api:${project.adventure_version}")
    implementation api("net.kyori:adventure-text-serializer-legacy:${project.adventure_version}")
    implementation api("net.kyori:adventure-text-serializer-plain:${project.adventure_version}")
    implementation api("net.kyori:adventure-text-serializer-gson:${project.adventure_version}")

    implementation api("io.github.kosmx.emotes:emotesAssets:${project.emotecraft_version}")
    implementation api("io.github.kosmx.emotes:emotesServer:${project.emotecraft_version}") {
        exclude(group: "com.google.code.gson")
        exclude(group: "org.jetbrains")
    }
    implementation api("dev.kosmx.player-anim:anim-core") {
        version {
            strictly "2.0.0+1.21.1"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release.set 21
}

java {
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = rootProject.archives_base_name

            from components.java
        }
    }

    repositories {
        mavenLocal()
    }
}
