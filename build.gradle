plugins {
    id 'maven-publish'
    id 'java-library'
    id 'java'
}

base.archivesName = rootProject.archives_base_name
version = rootProject.mod_version
group = rootProject.maven_group

repositories {
    maven {
        name = "Redlance"
        url = "https://repo.redlance.org/public"
    }
    mavenCentral()
}

dependencies {
    implementation api("com.github.mizosoft.methanol:methanol:${project.methanol_version}")
    implementation api("com.github.mizosoft.methanol:methanol-gson:${project.methanol_version}") {
        exclude(group: "com.google.code.gson")
    }
    /*implementation api("com.github.beothorn:webGrude:5.0.0") {
        exclude(group: "com.squareup.okhttp3")
    }*/

    implementation api("org.apache.logging.log4j:log4j-api:${project.log4j_version}")
    implementation "org.apache.logging.log4j:log4j-core:${project.log4j_version}"
    implementation "org.apache.logging.log4j:log4j-jul:${project.log4j_version}"
    runtimeOnly "com.lmax:disruptor:4.0.0"

    implementation api("commons-io:commons-io:2.20.0")
    implementation api("com.google.code.gson:gson:2.13.2") {
        exclude(group: "com.google.errorprone")
    }
    implementation api("net.kyori:adventure-api:${project.adventure_version}")
    implementation api("net.kyori:adventure-text-serializer-legacy:${project.adventure_version}")
    implementation api("net.kyori:adventure-text-serializer-gson:${project.adventure_version}") {
        exclude(group: "com.google.auto.service")
        exclude(group: "com.google.code.gson")
        exclude(group: "org.jspecify")
    }

    implementation api("dev.kosmx.player-anim:anim-core:2.0.3.2+1.21.5") // https://github.com/dima-dencep/minecraftPlayerAnimator/commit/0cf079b4707e4cbc11935429abbcb4e0b613475b
    implementation api("io.github.kosmx.emotes:emotesAssets:${project.emotecraft_version}")
    implementation api("io.github.kosmx.emotes:emotesServer:${project.emotecraft_version}") {
        exclude(group: "com.google.code.gson")
        exclude(group: "org.jetbrains")

        // NoteBlockLib
        exclude(module: "listenablefuture")
        exclude(group: "com.google.errorprone")
        exclude(group: "com.google.j2objc")
        exclude(group: "org.jspecify")
    }

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.13.4")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.13.4")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.13.4")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release.set 21
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = rootProject.archives_base_name

            from components.java
        }
    }

    repositories {
        mavenLocal()
    }
}
